apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'eclipse'

version='0.0.3'


repositories {
    mavenCentral()
}

sourceSets {
    main {
      resources.srcDirs = ["src/main/java"]
    }
}

jar {
	from sourceSets.main.allSource
}

javadoc 
{  
  options.addStringOption("sourcepath", "src/main/java")
  excludes = ["com/webrippers/gwt/dom/event/gwt/rebind/binder/*", "com/webrippers/gwt/dom/event/shared/binder/impl/*"]
  project.configure(options) {
	linkSource = true
	links("http://google-web-toolkit.googlecode.com/svn/javadoc/latest")
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}
 
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

dependencies {
	compile 'com.google.gwt:gwt-dev:2.7.0'
	compile 'com.google.gwt:gwt-user:2.7.0'
}

eclipse {
    project {
        natures 'com.google.gwt.eclipse.core.gwtNature'
        natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

install {
    repositories {
    	mavenInstaller {
			pom.project {
			    groupId = 'com.webrippers'
			    artifactId = 'gwt-dom-event-binder'
			
				name 'gwt-dom-event-binder'
			    packaging 'jar'
			    description 'GWT generator for handling dom events via annotations'
			    url 'https://github.com/rfilippone/gwt-dom-event-binder'
			    
			    scm {
			        url 'scm:git@github.com:rfilippone/gwt-dom-event-binder.git'
			        connection 'scm:git@github.com:rfilippone/gwt-dom-event-binder.git'
			        developerConnection 'scm:git@github.com:rfilippone/gwt-dom-event-binder.git'
			    }
			    
			    licenses {
			        license {
			            name 'The Apache Software License, Version 2.0'
			            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
			            distribution 'repo'
			        }
			    }
			    developers {
			        developer {
			            id 'rfilippone'
			            name 'Roberto Filippone'
			            email 'rfilippone@gmail.com'
			        }
			    }
			}
		}
	}
}

uploadArchives {
    repositories {
        mavenDeployer {
        	beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			pom = install.repositories.mavenInstaller.pom

        	repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
        }
    }
}
